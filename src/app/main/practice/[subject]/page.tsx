import { QuestionView } from '@/components/QuestionView'
import { Button } from '@/components/ui/button'
import Link from 'next/link'
import { ChevronLeft } from 'lucide-react'

// We need to use the generated Next.js types for page props
// These types are automatically generated by Next.js based on your app structure
type Props = {
  params: { subject: string }
  searchParams: { [key: string]: string | string[] | undefined }
}

export default async function PracticePage(props: Props) {
  // Destructure after receiving the entire props object
  const { params } = props
  
  // In Next.js 13+ App Router, we need to await the params
  // even though TypeScript doesn't show it as a Promise
  const resolvedSubject = await Promise.resolve(params.subject)
  
  // Now we can safely use the resolved subject
  const formattedSubject = resolvedSubject 
    ? resolvedSubject.replace(/-/g, ' ') 
    : 'Unknown Subject'

  return (
    <div className="container mx-auto p-6">
      <div className="mb-6">
        <Link href="/main">
          <Button variant="ghost" className="mb-4">
            <ChevronLeft className="h-4 w-4 mr-2" />
            Back to Subjects
          </Button>
        </Link>
        <h1 className="text-2xl font-bold text-gray-900 dark:text-white capitalize">
          {formattedSubject}
        </h1>
      </div>
      {resolvedSubject ? (
        <QuestionView subject={resolvedSubject} />
      ) : (
        <p className="text-red-500">Subject is not available.</p>
      )}
    </div>
  )
}